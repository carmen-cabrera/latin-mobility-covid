---
title: "lme-r"
format: html
editor: visual
---

```{r}
# data wrangling
library(tidyverse)
# data utilities
library(timetk)
# estimating mixed effects models
library(lme4)
library(merTools)
library(glmmTMB)
library(nlme)
# correlograms
library(ggcorrplot)
library(corrplot)
# data visualisation
library(viridis)
library(ggthemes)
library(ggpubr)
library(zoo)
library(showtext)
library(patchwork)
library(ggrepel)
# display regression equation
library(equatiomatic)
# standardise input variables
  #library(arm)
  # reporting regression results
library(broom.mixed)
library(gtsummary)
library(sjPlot)
```

```{r}
# Set working directory
wd <- '/Users/carmen/Library/CloudStorage/OneDrive-TheUniversityofLiverpool/research/RECAST/latin-mobility-covid-local-files'

# Set the country
country <- 'Argentina'

# Initialize variables for country_short and country_code
country_short <- ""
country_code <- ""

# Assign country_short and country_code based on the country
if (country == 'Argentina') {
    country_short <- 'ARG'
    country_code <- 'AR'
} else if (country == 'Chile') {
    country_short <- 'CHL'
    country_code <- 'CL'
} else if (country == 'Colombia') {
    country_short <- 'COL'
    country_code <- 'CO'
} else if (country == 'Mexico') {
    country_short <- 'MEX'
    country_code <- 'MX'
}
```

```{r}
category <- "rdi"
```

```{r}
# Read the CSV file
file_path <- paste0(wd, '/data/outputs/', country_short, '/mov-analysis/by-', category, '/data_trend.csv')
df <- read.csv(file_path)

df$time2 <- df$time^2
```

```{r}

eq1 <- y ~ time
m1 <- glmmTMB(eq1, data = df)
summary(m1)

###
  
eq2 <- y ~ time + O + D
m2 <- glmmTMB(eq2, data = df)
summary(m2)

eq2o <- y ~ time + O
m2o <- glmmTMB(eq2o, data = df)
summary(m2o)

###

eq3 <- y ~ time + (1|O) + (1|D)
m3 <- glmmTMB(eq3, data = df)
m3_re <- plot_model(m3, type ="re")
summary(m3)

eq3o <- y ~ time + (1|O)
m3o <- glmmTMB(eq3o, data = df)
m3o_re <- plot_model(m3o, type ="re")
summary(m3o)

###

df$Of <- factor(df$O)
df$Df <- factor(df$D)
eq4 <- y ~ time + (0 + time|Of) + (0 + time|Df)
m4 <- glmmTMB(eq4, data = df)
m4_re <- plot_model(m4, type ="re")
summary(m4)

df$Of <- factor(df$O)
eq4o <- y ~ time + (0 + time|Of) 
m4o <- glmmTMB(eq4o, data = df)
m4o_re <- plot_model(m4o, type ="re")
summary(m4o)

###

df$Of <- factor(df$O)
df$Df <- factor(df$D)
eq5 <- y ~ time + (time|Of) + (time|Df)
m5 <- glmmTMB(eq5, data = df)
m5_re <- plot_model(m5, type ="re")
summary(m5)

df$Of <- factor(df$O)
eq5o <- y ~ time + (time|Of) 
m5o <- glmmTMB(eq5o, data = df)
m5o_re <- plot_model(m5o, type ="re")
summary(m5o)

###

eq6 <- y ~ time + time2 + (time|O) + (time|D)
m6 <- glmmTMB(eq6, data = df)
m6_re <- plot_model(m6, type ="re")
summary(m6)

```

|     |
|-----|
|     |

```{r}
m3o$fit$par
m4o$fit$par
m5o$fit$par
m3o_re
m4o_re
m5o_re
```


```{r}

file_m3o <- paste0(wd, '/data/outputs/', country_short, '/mov-analysis/by-', category, '/data_trend_param_m3o.csv')
write.csv(m3o$fit$par, file_m3o, row.names = FALSE)

file_m3o_re <- paste0(wd, '/data/outputs/', country_short, '/mov-analysis/by-', category, '/data_trend_param_m3o_re.csv')
write.csv(m3o_re[[1]], file_m3o_re, row.names = FALSE)

###

file_m4o <- paste0(wd, '/data/outputs/', country_short, '/mov-analysis/by-', category, '/data_trend_param_m4o.csv')
write.csv(m4o$fit$par, file_m4o, row.names = FALSE)

file_m4o_re <- paste0(wd, '/data/outputs/', country_short, '/mov-analysis/by-', category, '/data_trend_param_m4o_re.csv')
write.csv(m4o_re[[1]], file_m4o_re, row.names = FALSE)

###

file_m5o <- paste0(wd, '/data/outputs/', country_short, '/mov-analysis/by-', category, '/data_trend_param_m5o.csv')
write.csv(m5o$fit$par, file_m5o, row.names = FALSE)

file_m5o_re <- paste0(wd, '/data/outputs/', country_short, '/mov-analysis/by-', category, '/data_trend_param_m5o_re.csv')
write.csv(m5o_re[[1]], file_m5o_re, row.names = FALSE)



```







```{r}
p1_m1me <- plot_model(m3o_re, terms = c("1", "time")) %>% 
  .$data %>% ggplot(aes(x=estimate, y=term, color=group)) +
  geom_point(size = 3.5,  colour = "black") +
  geom_errorbar(aes(xmin = conf.low, xmax = conf.high), 
                width=.05, color= "black") +
  geom_pointrange(aes(xmin = conf.low, xmax = conf.high)) +
  scale_color_manual(values=c("#88ccee")) +
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        axis.text = element_text(size = 10.5)
  ) +
  scale_y_discrete(labels=c("time" = "Week", 
                            "1" = "Intercept")) +
  geom_vline(xintercept=0, 
             linetype="solid", 
             color = "grey20",
             linewidth=1,
             alpha =.2) +
  labs(title = "Main fixed effects")

p1_m1me
```

```{r}
m2_re <- plot_model(m,
           type ="re", terms = "O")

m2_re <- m2_re[[1]]$data

p2_m2re <- m2_re %>% filter(facet == "O (Intercept)") %>% 
  ggplot(aes(x=estimate, y=term, color=group)) +
  geom_point(size = 3.5,  colour = "black") +
  geom_errorbar(aes(xmin = conf.low, xmax = conf.high), 
                width=.8, color= "black") +
  geom_pointrange(aes(xmin = conf.low, xmax = conf.high)) +
  scale_color_manual(values=c("#ddcc77", "#88ccee")) +
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        axis.text = element_text(size = 10.5)
        ) +
  geom_vline(xintercept=0, 
             linetype="solid", 
             color = "grey20",
             size=1,
             alpha =.2) +
  labs(title = "d")

p2_m2re
```

```{r}
eq <- y ~  time + (time | O) + (time | D)
model <- glmmTMB(eq, data = df)
```
`

```{r}
pm3o <- plot_model(m3o, terms = c("time", "O")) %>% 
  .$df %>% ggplot(aes(x=estimate, y=term, color=group)) +
  geom_point(size = 3.5,  colour = "black") +
  geom_errorbar(aes(xmin = conf.low, xmax = conf.high), 
                width=.05, color= "black") +
  geom_pointrange(aes(xmin = conf.low, xmax = conf.high)) +
  scale_color_manual(values=c("#88ccee")) +
  theme(legend.position = "none",
        axis.title.y = element_blank(),
        axis.text = element_text(size = 10.5)
  ) +
  scale_y_discrete(labels=c("z_stringency_index" = "Stringency t", 
                            "z_cases" = "New cases t",
                            "lag(z_stringency_index, 1)" = "Stringency t-1")) +
  geom_vline(xintercept=0, 
             linetype="solid", 
             color = "grey20",
             linewidth=1,
             alpha =.2) +
  labs(title = "c",
       subtitle = " Main fixed effects")

p1_m
```
